image: galacticfog/docker-yarn-debian:1.12

stages:
- test
- publish
- review
- deploy

cache:
  key: "gestalt-ui-react"
  untracked: false
  paths:
  - .yarn-cache/

variables:
  DOCKER_IMG: "galacticfog/gestalt-ui-react"
  TEST_DOMAIN: test.galacticfog.com

test:
  stage: test
  script:
    - yarn install --pure-lockfile --cache-folder .yarn-cache
    - yarn test
  artifacts:
    expire_in: 60 minutes
    paths:
    - coverage/

.publish_template: &publish
  services:
    - docker:dind
  stage: publish
  script:
    - VERSION=$(<package.json jq -r '.version')
    - yarn install --pure-lockfile --cache-folder .yarn-cache
    - yarn build
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - echo building   $DOCKER_IMG:$DOCKER_TAG
    - docker build --no-cache -t $DOCKER_IMG:$DOCKER_TAG .
    - docker push     $DOCKER_IMG:$DOCKER_TAG
    - |
      if [ ${CI_COMMIT_REF_NAME} == "develop" ]; then
         docker tag $DOCKER_IMG:$DOCKER_TAG $DOCKER_IMG:latest
         docker push $DOCKER_IMG:latest
      fi
    - docker rmi      $DOCKER_IMG:$DOCKER_TAG
    - echo $DOCKER_TAG > DOCKER_TAG
  dependencies:
    - test
  artifacts:
    paths:
    - DOCKER_TAG

publish-develop-and-tags:
  <<: *publish
  only:
    - develop
    - tags

manual-publish-branches:
  <<: *publish
  when: manual

.deploy_template: &deploy_to_test
  image: galacticfog/gitlab-updater
  stage: deploy
  environment:
    name: test
    url: https://ui-react.$TEST_DOMAIN
  tags:
    - test-cluster
  variables:
    GIT_STRATEGY: none
  allow_failure: true
  script:
    - (if [ ! -e DOCKER_TAG ]; then echo "DOCKER_TAG is missing, you probably need to (re)run the publish step"; exit 1; fi);
    - DOCKER_TAG=$(cat DOCKER_TAG)
    - echo "Will deploy docker tag $DOCKER_IMG:$DOCKER_TAG"
    - /usr/local/bin/update-deployed-app.sh  marathon.mesos:8080 gestalt-test-tasks/ui-react  $DOCKER_IMG:$DOCKER_TAG

auto-deploy-develop-to-test:
  <<: *deploy_to_test
  only:
    - develop
  dependencies:
    - publish-develop-and-tags

manual-deploy-to-test:
  <<: *deploy_to_test
  when: manual
  dependencies:
    - manual-publish-branches

pages:
  stage: publish
  dependencies:
    - test
  script:
    - mkdir -p public
    - cp -r coverage/PhantomJS*/lcov-report/* public/
  artifacts:
    paths:
      - public
    expire_in: 60 days
  only:
    - develop

review:
  image: galacticfog/gitlab-updater
  stage: review
  script:
    - (if [ ! -e DOCKER_TAG ]; then echo "DOCKER_TAG is missing, you probably need to (re)run the publish step"; exit 1; fi);
    - DOCKER_TAG=$(cat DOCKER_TAG)
    - echo "Will deploy docker tag $DOCKER_IMG:$DOCKER_TAG"
    - MARURL=marathon.mesos:8080/v2/apps/gestalt-test-tasks/ui-react-${CI_BUILD_REF_SLUG}
    - <review-app.json jq ".container.docker.image = \"$DOCKER_IMG:$DOCKER_TAG\" | .labels.HAPROXY_0_VHOST = \"ui-react-$CI_BUILD_REF_SLUG.$TEST_DOMAIN\" | .labels.CI_COMMIT_SHA = \"$CI_COMMIT_SHA\"" | http PUT $MARURL
  dependencies:
    - publish-develop-and-tags
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: https://ui-react-$CI_BUILD_REF_SLUG.$TEST_DOMAIN
    on_stop: stop_review
  when: manual

stop_review:
  image: galacticfog/gitlab-updater
  stage: review
  script:
    - MARURL=marathon.mesos:8080/v2/apps/gestalt-test-tasks/ui-react-${CI_BUILD_REF_SLUG}
    - http DELETE $MARURL
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  when: manual

