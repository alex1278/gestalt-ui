image: galacticfog/docker-yarn-debian:1.12

stages:
- test
- publish
- review
- deploy

cache:
  key: "gestalt-ui-react"
  untracked: false
  paths:
  - .yarn-cache/

variables:
  DOCKER_IMG: "galacticfog/gestalt-ui-react"
  CI_URL: https://gtw1.test.galacticfog.com/cd/ui-review-deploy

test:
  stage: test
  script:
    - yarn install --pure-lockfile --cache-folder .yarn-cache
    - yarn test
  artifacts:
    expire_in: 60 minutes
    paths:
    - coverage/

.deploy_template: &deploy_to_test
  stage: deploy
  services:
    - docker:dind
  environment:
    name: test
    url: https://ui-react.$TEST_DOMAIN
  allow_failure: false
  script:
    - VERSION=$(<package.json jq -r '.version')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - yarn install --cache-folder .yarn-cache
    - yarn build
    - docker build --no-cache -t $DOCKER_IMG:$DOCKER_TAG .
    - docker push                $DOCKER_IMG:$DOCKER_TAG
    - |
      if [ ${CI_COMMIT_REF_NAME} == "develop" ]; then
         docker tag  $DOCKER_IMG:$DOCKER_TAG $DOCKER_IMG:latest
         docker push $DOCKER_IMG:latest
      fi
    - docker rmi      $DOCKER_IMG:$DOCKER_TAG
    - echo "Will deploy docker tag $DOCKER_IMG:$DOCKER_TAG to test"
    - /usr/local/bin/update-deployed-app.sh  $CLUSTER_URL gestalt-test-tasks/ui-react  $DOCKER_IMG:$DOCKER_TAG

auto-deploy-develop-to-test:
  <<: *deploy_to_test
  only:
    - develop
  dependencies:
    - test

publish-docker-image:
  stage: publish
  services:
    - docker:dind
  allow_failure: false
  script:
    - VERSION=$(<package.json jq -r '.version')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - yarn install --cache-folder .yarn-cache
    - yarn build
    - docker build --no-cache -t $DOCKER_IMG:$DOCKER_TAG .
    - docker push                $DOCKER_IMG:$DOCKER_TAG
    - docker rmi      $DOCKER_IMG:$DOCKER_TAG
  only:
    - tags

# manual-deploy-to-test:
#   <<: *deploy_to_test
#   when: manual
#   dependencies:
#     - test

pages:
  stage: publish
  dependencies:
    - test
  script:
    - mkdir -p public
    - cp -r coverage/PhantomJS*/lcov-report/* public/
  artifacts:
    paths:
      - public
    expire_in: 60 days
  only:
    - develop

review:
  stage: review
  services:
    - docker:dind
  script:
    - VERSION=$(<package.json jq -r '.version')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - yarn install --cache-folder .yarn-cache
    - yarn build
    - docker build --no-cache -t $DOCKER_IMG:$DOCKER_TAG .
    - docker push                $DOCKER_IMG:$DOCKER_TAG
    - docker rmi      $DOCKER_IMG:$DOCKER_TAG
    - echo "Will deploy docker tag $DOCKER_IMG:$DOCKER_TAG review app"
    - http --check-status -a "$API_KEY":"$API_SECRET" --ignore-stdin $CI_URL image=$DOCKER_IMG:$DOCKER_TAG git_ref=$CI_COMMIT_REF_NAME git_sha=$CI_COMMIT_SHA git_author="$GITLAB_USER_NAME" gitlab_env_slug=$CI_ENVIRONMENT_SLUG gitlab_env_url="$CI_ENVIRONMENT_URL"
  dependencies:
    - test
  environment:
    name: review/$CI_BUILD_REF_NAME
    on_stop: stop_review
  when: manual
  except:
    - develop

stop_review:
  stage: review
  script:
    - http --check-status -a "$API_KEY":"$API_SECRET" --ignore-stdin "$CI_URL?entryPoint=stop" git_ref=$CI_COMMIT_REF_NAME
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  when: manual
  except:
    - develop

